<project name="org.destecs.ide" default="build">
	<tstamp />
	<property file="build.properties" />



	

	
	<!-- Git info -->
	<!--available file=".git" type="dir" property="git.present"/-->

	<target name="git.revision" description="Store git revision in ${repository.version}">
	    <exec executable="git" outputproperty="git.revision" failifexecutionfails="false" errorproperty="">
	        <arg value="describe"/>
	        <arg value="--tags"/>
	        <arg value="--always"/>
	        <arg value="HEAD"/>
	    </exec>
	    <condition property="repository.version" value="${git.revision}" else="unknown">
	        <and>
	            <isset property="git.revision"/>
	            <length string="${git.revision}" trim="yes" length="0" when="greater"/>
	        </and>
	    </condition>
		<echo message="Repository version: ${repository.version}" />
	</target>
	
	<!--
        PDE Build expects that the build directory contains a "plugins" 
        directory and a "features" directory. These directories should contain
        the various plug-ins and features to be built.
        
        It's possible to use the CVS checkout process that is built into 
        PDE Build. This is done with map files and is beyond the scope of 
        this tutorial. 
        
        This tutorial simply copies the projects directly from your workspace
        into the appropriate build directory folders.
    -->
	<target name="init" depends="git.revision">
		<mkdir dir="${buildDirectory}" />
		<mkdir dir="${buildDirectory}/plugins" />
		<mkdir dir="${buildDirectory}/features" />
		<ant antfile="copyProjects.xml" target="copy-projects" />
	</target>

	<!--
        This target actually executes the PDE Build process by launching the 
        Eclipse antRunner application.
    -->
	<target name="pde-build">
		<echo message="Executing ${eclipseLocation}/plugins/org.eclipse.equinox.launcher_${equinoxLauncherPluginVersion}.jar" />
		<echo message="Eclipse base location: ${eclipseLocation}" />
		<echo message="Base location: ${base}" />
		<echo message="Product: ${product}" />
        <echo message="java.io.tmpdir: ${java.io.tmpdir}" />
		<java classname="org.eclipse.equinox.launcher.Main" fork="true" failonerror="true">
			<arg value="-application" />
			<arg value="org.eclipse.ant.core.antRunner" />
			<arg value="-buildfile" />
			<arg value="${eclipseLocation}/plugins/org.eclipse.pde.build_${pdeBuildPluginVersion}/scripts/productBuild/productBuild.xml" />
			<arg value="-Dtimestamp=${timestamp}" />
			<arg value="-Dproduct=${product}" />
			<arg value="-Dbase=${base}" />
			<arg value="-DeclipseLocation=${eclipseLocation}" />
			<arg value="-DbuildDirectory=${buildDirectory}" />
			<arg value="-DpdeBuildPluginVersion=${pdeBuildPluginVersion}" />
			<arg value="-Dbaseos=${baseos}" />
			<arg value="-Dbasews=${basews}" />
			<arg value="-Dbasearch=${basearch}" />
			<arg value="-DpluginPath=${pluginPath}" />
            <arg value="-Djava.io.tmpdir=${java.io.tmpdir}" />

			<classpath>
				<pathelement location="${eclipseLocation}/plugins/org.eclipse.equinox.launcher_${equinoxLauncherPluginVersion}.jar" />
			</classpath>
		</java>
	</target>

	<target name="clean">
		<delete dir="${buildDirectory}" />
	</target>

	<target name="sourceclean">
		<delete includeemptydirs="true">
			<fileset dir="${buildDirectory}" includes="*.xml" />
			<fileset dir="${buildDirectory}/features">
			</fileset>
			<fileset dir="${buildDirectory}/plugins">
			</fileset>
		</delete>

	</target>

<!--,sourceclean-->
	<target name="build" depends="clean,init, pde-build" />
</project>