class User

instance variables 

-- controller
controller: Controller;

-- if true, controller.Visit will be called
trigger: bool := World`USE_SCRIPT = 0

operations

-- contructor for User
public User: Controller ==> User
User(ctrl) ==
	controller := ctrl;

-- periodic operation
public Step: () ==> ()
Step() ==
	if trigger then (
		-- set angles to visit and reset trigger
		controller.Visit(ANGLES);
		trigger := false
	)

-- define periodic thread
thread periodic(1e8, 0, 0, 1e8)(Step)

values

-- ANGLES = {MATH`pi, MATH`pi/2, 7*MATH`pi/4} this one should fail pre-condition
-- ANGLES = {pi, 3*pi/4, pi/6, 5*pi/4} this one should be fine
pi = MATH`pi;
ANGLES = {pi, 3*pi/4, pi/6, 19*pi/12}

-- alias for pi


end User