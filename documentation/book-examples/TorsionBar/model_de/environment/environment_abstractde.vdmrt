% abstract DE environment (used for DE-only simulations)

\begin{vdm_al}
class AbstractDeEnvironment
	is subclass of Environment

instance variables
	-- placeholder for the (real) actuator object
	pwm : ActuatorReal := getActuator(TorsionBarController`ACTUATOR_PWM);
	
	-- placeholder for the (real) sensor objects
	encm : SensorReal := getSensor(TorsionBarController`SENSOR_ENCM);
	encl : SensorReal := getSensor(TorsionBarController`SENSOR_ENCL)
	
operations
	public init: () ==> ()
	init () ==  
		-- start the simulation loop
		start (self);
	
operations
	private tick: () ==> ()
	tick () ==
		-- the DE simulator does not progress time
		duration (0)
			-- default: stop after two seconds
			if time >= 2E9
			then World`done := true
			else (
				-- compute the (now instantaneous!) response
				encm.mvalue := pwm.cvalue;
				encl.mvalue := pwm.cvalue;
				
				-- diagnostics
				IO`printf("CT-SIM %s, PWM = %s, ENCM = %s, ENCL = %s\n",
					[time/1E9, pwm.cvalue, encm.mvalue, encl.mvalue]);
			)

thread
	-- the DE simulator runs at 100 Hz
	periodic(1E6, 0, 0, 0) (tick)
			
end AbstractDeEnvironment
\end{vdm_al}