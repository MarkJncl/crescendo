<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="protocol.xsl"?>
<XML-RPC_Library xsi:noNamespaceSchemaLocation="xml-rpc_library.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<schemeVersion>
		<major>1</major>
		<minor>0</minor>
		<revision>0</revision>
		<patch>0</patch>
	</schemeVersion>
	<name>Destecs</name>
	<interfaceVersion>
		<major>2</major>
		<minor>2</minor>
		<revision>0</revision>
	</interfaceVersion>
	<implementationVersion>
		<major>2</major>
		<minor>2</minor>
		<revision>0</revision>
		<patch>0</patch>
	</implementationVersion>
	<description><![CDATA[
Normal control flow of the protocol:<br/>

Text:
<ol>

<li>Check the protocol version
<li>Initialize the tool for Co-Simulation
<li>Load a model
<li>Check the models interface
<li>*Get shared design parameters and check agains contract - included in query interface
<li>Set shared design parameters with values from scenario
<li>Get all parameters check if they need to be set form scenario. This is parameters only relevant to the current tool
<li>Set all parameters for the tool from the scenario
<li>Start the simulator
<li>Step until simulation completed it's time
<li>Stop the simulator. No future simulation is possible after this call.
<li>Terminate the external tool if no more simulations should be performed
</ol>

Commands:
<ol>

<li>GetVersion
<li>Initialize
<li>Load
<li>QueryInterface
<li>*GetDesignParameters - included in query interface
<li>SetDesignParameters
<li>GetParameters
<li>SetParameters

<li>Start
<li>Step
<li>Stop

<li>Terminate

</ol>

Commands that can be fired at any point:
<ul>

<li>GetStatus

</ul>
]]></description>
	<methods>
		<!--GetVersion -->
		<method>
			<description>Gets the name and version of the simulator in the form: name / majorVersion.MinorVersion.revision.patch</description>
			<methodCall>
				<methodName>Destecs.GetVersion</methodName>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>name</name>
									<value>
										<string>20-sim</string>
									</value>
									<description>The name of the simulator program</description>
								</member>
								<member>
									<name>version</name>
									<value>
										<string>4.1.2.3</string>
									</value>
									<description>majorVersion.MinorVersion.revision.patch</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--Initialize -->
		<method>
			<description>Initialize the simulator for co-simulation, after calling this function all the other functions should be available, load, step ...</description>
			<methodCall>
				<methodName>Destecs.Initialize</methodName>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>success</name>
									<value>
										<boolean>true</boolean>
									</value>
									<description>if failed then the function will return a fault response</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--Terminate -->
		<method>
			<description>Terminates the simulator tool. After a reply no futher communication be be posible. The simulator tool will release all resources and terminate.</description>
			<methodCall>
				<methodName>Destecs.Terminate</methodName>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>success</name>
									<value>
										<boolean>true</boolean>
									</value>
									<description>if failed then the function will return a fault response</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--Load -->
		<method>
			<description>Loads a (model) file from its path. The model is activated and initialized after loading</description>
			<methodCall>
				<methodName>Destecs.Load</methodName>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>name</name>
									<value>
										<string>C:\My Models\PID_Controller.emx</string>
									</value>
									<description>name of the file or project to load. This loaded model is also made active</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>success</name>
									<value>
										<boolean>true</boolean>
									</value>
									<description>if failed then the function will return a fault response</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>

		<!--QueryInterface -->
		<method>
			<description>
        Queries the interface used in Co-Simulation Grouped in a Map with keys SharedDesignParameters,DesignParameters,Inputs,Outputs.
        The structure of each of them is a Map from name to value
			</description>
			<methodCall>
				<methodName>Destecs.QueryInterface</methodName>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>sharedDesignParameters</name>
									<value>
										<array>
											<data>
												<value>
													<struct>
														<member>
															<name>name</name>
															<value>
																<string>name</string>
															</value>
														</member>
														<member>
															<name>size</name>
															<value>
																<array>
																	<data>
																		<value>
																			<int>2</int>
																		</value>
																	</data>
																</array>
															</value>
														</member>
													</struct>
												</value>
											</data>
										</array>
									</value>
								</member>
								<member>
									<name>events</name>
									<value>
										<array>
											<data>
												<value>
													<struct>
														<member>
															<name>name</name>
															<value>
																<string>eventname</string>
															</value>
														</member>
														<member>
															<name>type</name>
															<value>
																<int>0</int>
															</value>
															<description>-1 = eventdown, 0 = event, 1 = eventup</description>
														</member>
													</struct>
												</value>
											</data>
										</array>
									</value>
								</member>
								<member>
									<name>inputs</name>
									<value>
										<array>
											<data>
												<value>
													<struct>
														<member>
															<name>name</name>
															<value>
																<string>name</string>
															</value>
														</member>
														<member>
															<name>size</name>
															<value>
																<array>
																	<data>
																		<value>
																			<int>2</int>
																		</value>
																	</data>
																</array>
															</value>
														</member>
													</struct>
												</value>
											</data>
										</array>
									</value>
								</member>
								<member>
									<name>outputs</name>
									<value>
										<array>
											<data>
												<value>
													<struct>
														<member>
															<name>name</name>
															<value>
																<string>name</string>
															</value>
														</member>
														<member>
															<name>size</name>
															<value>
																<array>
																	<data>
																		<value>
																			<int>2</int>
																		</value>
																	</data>
																</array>
															</value>
														</member>
													</struct>
												</value>
											</data>
										</array>
									</value>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--QueryVariables -->
		<method>
			<description>
			Perform a query and return a list of all variables that can be accessed and logged.
			</description>
			<methodCall>
				<methodName>Destecs.QueryVariables</methodName>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<array>
								<data>
									<value>
										<struct>
											<member>
												<name>name</name>
												<value>
													<string>name</string>
												</value>
											</member>
											<member>
												<name>size</name>
												<value>
													<array>
														<data>
															<value>
																<int>2</int>
															</value>
														</data>
													</array>
												</value>
											</member>
										</struct>
									</value>
								</data>
							</array>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--QueryParameters -->
		<method>
			<description>
			Perform a query and return a list of all parameters that can be accessed and logged.
			</description>
			<methodCall>
				<methodName>Destecs.QueryParameters</methodName>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<array>
								<data>
									<value>
										<struct>
											<member>
												<name>name</name>
												<value>
													<string>name</string>
												</value>
											</member>
											<member>
												<name>size</name>
												<value>
													<array>
														<data>
															<value>
																<int>2</int>
															</value>
														</data>
													</array>
												</value>
											</member>
										</struct>
									</value>
								</data>
							</array>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--SetParameter -->
		<method>
			<description>Sets any parameter that is *not* used in the co-simulation.</description>
			<methodCall>
				<methodName>Destecs.SetParameter</methodName>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>name</name>
									<value>
										<string>parName</string>
									</value>
								</member>
								<member>
									<name>size</name>
									<value>
										<array>
											<data>
												<value>
													<int>2</int>
												</value>
											</data>
										</array>
									</value>
								</member>
								<member>
									<name>value</name>
									<value>
										<array>
											<data>
												<value>
													<double>3.14159265</double>
												</value>
											</data>
										</array>
									</value>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>success</name>
									<value>
										<boolean>true</boolean>
									</value>
									<description>if failed then the function will return a fault response</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--SetParameters -->
		<method>
			<description>Sets parameters that are *not* used in the co-simulation.</description>
			<methodCall>
				<methodName>Destecs.SetParameters</methodName>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>parameters</name>
									<value>
										<array>
											<data>
												<value>
													<struct>
														<member>
															<name>name</name>
															<value>
																<string>parName</string>
															</value>
														</member>
														<member>
															<name>size</name>
															<value>
																<array>
																	<data>
																		<value>
																			<int>2</int>
																		</value>
																	</data>
																</array>
															</value>
														</member>
														<member>
															<name>value</name>
															<value>
																<array>
																	<data>
																		<value>
																			<double>3.14159265</double>
																		</value>
																	</data>
																</array>
															</value>
														</member>
													</struct>
												</value>
											</data>
										</array>
									</value>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>success</name>
									<value>
										<boolean>true</boolean>
									</value>
									<description>if failed then the function will return a fault response</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--SetDesignParameter -->
		<method>
			<description>Sets any parameter that is *used* in the co-simulation.</description>
			<methodCall>
				<methodName>Destecs.SetDesignParameter</methodName>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>name</name>
									<value>
										<string>parName</string>
									</value>
								</member>
								<member>
									<name>size</name>
									<value>
										<array>
											<data>
												<value>
													<int>2</int>
												</value>
											</data>
										</array>
									</value>
								</member>
								<member>
									<name>value</name>
									<value>
										<array>
											<data>
												<value>
													<double>3.14159265</double>
												</value>
											</data>
										</array>
									</value>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>success</name>
									<value>
										<boolean>true</boolean>
									</value>
									<description>if failed then the function will return a fault response</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--SetDesignParameters -->
		<method>
			<description>Sets design parameters that are used in the co-simulation.</description>
			<methodCall>
				<methodName>Destecs.SetDesignParameters</methodName>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>designParameters</name>
									<value>
										<array>
											<data>
												<value>
													<struct>
														<member>
															<name>name</name>
															<value>
																<string>parName</string>
															</value>
														</member>
														<member>
															<name>size</name>
															<value>
																<array>
																	<data>
																		<value>
																			<int>2</int>
																		</value>
																	</data>
																</array>
															</value>
														</member>
														<member>
															<name>value</name>
															<value>
																<array>
																	<data>
																		<value>
																			<double>3.14159265</double>
																		</value>
																	</data>
																</array>
															</value>
														</member>
													</struct>
												</value>
											</data>
										</array>
									</value>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>success</name>
									<value>
										<boolean>true</boolean>
									</value>
									<description>if failed then the function will return a fault response</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--GetParameter -->
		<method>
			<description>Gets any parameter that is *not* used in the co-simulation.</description>
			<methodCall>
				<methodName>Destecs.GetParameter</methodName>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>name</name>
									<value>
										<string>parName</string>
									</value>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>size</name>
									<value>
										<array>
											<data>
												<value>
													<int>2</int>
												</value>
											</data>
										</array>
									</value>
								</member>
								<member>
									<name>value</name>
									<value>
										<array>
											<data>
												<value>
													<double>3.14159265</double>
												</value>
											</data>
										</array>
									</value>
									<description>returns value of parameter</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--GetParameters -->
		<method>
			<description>Gets values from all parameters that are *not* used in the co-simulation.</description>
			<methodCall>
				<methodName>Destecs.GetParameters</methodName>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>parameters</name>
									<value>
										<array>
											<data>
												<value>
													<struct>
														<member>
															<name>name</name>
															<value>
																<string>parName</string>
															</value>
														</member>
														<member>
															<name>size</name>
															<value>
																<array>
																	<data>
																		<value>
																			<int>2</int>
																		</value>
																	</data>
																</array>
															</value>
														</member>
														<member>
															<name>value</name>
															<value>
																<array>
																	<data>
																		<value>
																			<double>3.14159265</double>
																		</value>
																	</data>
																</array>
															</value>
														</member>
													</struct>
												</value>
											</data>
										</array>
									</value>
									<description>name value pairs of all parameters</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--GetDesignParameter -->
		<method>
			<description>Gets any design parameter that is used in the co-simulation.</description>
			<methodCall>
				<methodName>Destecs.GetDesignParameter</methodName>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>name</name>
									<value>
										<string>parName</string>
									</value>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>size</name>
									<value>
										<array>
											<data>
												<value>
													<int>2</int>
												</value>
											</data>
										</array>
									</value>
								</member>
								<member>
									<name>value</name>
									<value>
										<array>
											<data>
												<value>
													<double>3.14159265</double>
												</value>
											</data>
										</array>
									</value>
									<description>returns value of parameter</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--GetDesignParameters -->
		<method>
			<description>Gets values from all parameters that are used in the co-simulation.</description>
			<methodCall>
				<methodName>Destecs.GetDesignParameters</methodName>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>designParameters</name>
									<value>
										<array>
											<data>
												<value>
													<struct>
														<member>
															<name>name</name>
															<value>
																<string>parName</string>
															</value>
														</member>
														<member>
															<name>size</name>
															<value>
																<array>
																	<data>
																		<value>
																			<int>2</int>
																		</value>
																	</data>
																</array>
															</value>
														</member>
														<member>
															<name>value</name>
															<value>
																<array>
																	<data>
																		<value>
																			<double>3.14159265</double>
																		</value>
																	</data>
																</array>
															</value>
														</member>
													</struct>
												</value>
											</data>
										</array>
									</value>
									<description>name value pairs of all parameters</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--Step -->
		<method>
			<description>Step is used to progress in simulation, it pushes time forward. A step inputs variables and the step time and returns variables changed during the step and the time at which the next change in the server can take place.</description>
			<methodCall>
				<methodName>Destecs.Step</methodName>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>singleStep</name>
									<value>
										<boolean>false</boolean>
									</value>
									<description>true=take a single step (do not cross the outputTime), false=take steps untill outputTime has been reached</description>
								</member>
								<member>
									<name>outputTime</name>
									<value>
										<double>1.0</double>
									</value>
									<description>If zero then just take one step (regardless of the singleStep parameter) else take enough steps to reach outputTime unless singleStep is true</description>
								</member>
								<member>
									<name>inputs</name>
									<value>
										<array>
											<data>
												<value>
													<struct>
														<member>
															<name>name</name>
															<value>
																<string>inputname</string>
															</value>
														</member>
														<member>
															<name>size</name>
															<value>
																<array>
																	<data>
																		<value>
																			<int>2</int>
																		</value>
																	</data>
																</array>
															</value>
														</member>
														<member>
															<name>value</name>
															<value>
																<array>
																	<data>
																		<value>
																			<double>3.14159265</double>
																		</value>
																	</data>
																</array>
															</value>
														</member>
													</struct>
												</value>
											</data>
										</array>
									</value>
								</member>
								<member>
									<name>events</name>
									<value>
										<array>
											<data>
												<value>
													<string>eventname</string>
												</value>
											</data>
										</array>
									</value>
									<description>A list of Event causing this Step</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>time</name>
									<value>
										<double>1.0</double>
									</value>
									<description>the time that has been reached</description>
								</member>
								<member>
									<name>result</name>
									<value>
										<int>0</int>
									</value>
									<description>0=the step action succeeded, and additional steps can be taken, 1=the step action succeeeded, and the simulation is finished, 2=the step action succeeded, but an event occurred. if failed then the function will return a fault response</description>
								</member>
								<member>
									<name>outputs</name>
									<value>
										<array>
											<data>
												<value>
													<struct>
														<member>
															<name>name</name>
															<value>
																<string>outputname</string>
															</value>
														</member>
														<member>
															<name>size</name>
															<value>
																<array>
																	<data>
																		<value>
																			<int>2</int>
																		</value>
																	</data>
																</array>
															</value>
														</member>
														<member>
															<name>value</name>
															<value>
																<array>
																	<data>
																		<value>
																			<double>3.14159265</double>
																		</value>
																	</data>
																</array>
															</value>
														</member>
													</struct>
												</value>
											</data>
										</array>
									</value>
								</member>
								<member>
									<name>events</name>
									<value>
										<array>
											<data>
												<value>
													<string>eventname</string>
												</value>
											</data>
										</array>
									</value>
									<description>A list of Event names causing the Step to return early</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--GetStatus -->
		<method>
			<description>Gets the status: 0=Not Initialized, 1=Initialized, 2=Step Taken, not finished, 3=Finished, 4= Loaded</description>
			<methodCall>
				<methodName>Destecs.GetStatus</methodName>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>status</name>
									<value>
										<int>1</int>
									</value>
									<description>0=Not Initialized, 1=Initialized, 2=Step Taken, not finished, 3=Finished</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--Start -->
		<method>
			<description>Starts the simulator or interpreter. After this function is called a Step can be taken</description>
			<methodCall>
				<methodName>Destecs.Start</methodName>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>success</name>
									<value>
										<boolean>true</boolean>
									</value>
									<description>if failed then the function will return a fault response</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--Stop -->
		<method>
			<description>Stops the simulator or interpreter. After this function is no Steps can be taken and the model cannot be Satrted again</description>
			<methodCall>
				<methodName>Destecs.Stop</methodName>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>success</name>
									<value>
										<boolean>true</boolean>
									</value>
									<description>if failed then the function will return a fault response</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--SetToolSetting -->
		<method>
			<description>Set a tool setting.</description>
			<methodCall>
				<methodName>Destecs.SetToolSetting</methodName>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>key</name>
									<value>
										<string>simulator.integrationmethod</string>
									</value>
								</member>
								<member>
									<name>value</name>
									<value>
										<string>Euler</string>
									</value>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>success</name>
									<value>
										<boolean>true</boolean>
									</value>
									<description>if failed then the function will return a fault response</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--GetToolSetting -->
		<method>
			<description>Get a tool setting.</description>
			<methodCall>
				<methodName>Destecs.GetToolSetting</methodName>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>key</name>
									<value>
										<string>simulator.integrationmethod</string>
									</value>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>value</name>
									<value>
										<string>Euler</string>
									</value>
									<description>if failed then the function will return a fault response</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--QueryToolSettings -->
		<method>
			<methodCall>
				<methodName>Destecs.QueryToolSettings</methodName>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<array>
								<data>
									<value>
										<struct>
											<member>
												<name>key</name>
												<value>
													<string>simulator.integrationmethod</string>
												</value>
											</member>
											<member>
												<name>value</name>
												<value>
													<string>Euler</string>
												</value>
											</member>
											<member>
												<name>options</name>
												<value>
													<array>
														<data>
															<value>
																<string>Euler</string>
															</value>
														</data>
													</array>
												</value>
											</member>
										</struct>
									</value>
								</data>
							</array>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>

		<!-- Load2 -->
		<method>
			<description>Loads a (model) file from its path. The model is activated and initialized after loading</description>
			<methodCall>
				<methodName>Destecs.Load2</methodName>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>arguments</name>
									<value>
										<array>
											<data>
												<value>
													<struct>
														<member>
															<name>argumentName</name>
															<value>
																<string>modelName</string>
															</value>
															<description>argument name</description>
														</member>
														<member>
															<name>argumentValue</name>
															<value>
																<string>mymodel.vdm</string>
															</value>
															<description>argument value</description>
														</member>
													</struct>
												</value>
											</data>
										</array>
									</value>
									<description>argument list for the tool to load and prepare 
								a simulation</description>
								</member>
								<!-- member> <name>outputDir</name> <value> <string>c:\temp</string> 
									</value> <description>output directory (relative or absolute) for the simulator 
									to store e.g. logfiles</description> </member -->
							</struct>
						</value>
					</param>
				</params>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>success</name>
									<value>
										<boolean>true</boolean>
									</value>
									<description>if failed then the function will return a fault response</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--SetLogVariables -->
		<method>
			<description>Specify a list of variables that needs to be stored. After a simulation the variables are stored to the given file. It can also be retrieved later by the call WriteCSVFile.</description>
			<methodCall>
				<methodName>Destecs.SetLogVariables</methodName>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>filePath</name>
									<value>
										<string>Location\filename.csv</string>
									</value>
								</member>
								<member>
									<name>variables</name>
									<value>
										<array>
											<data>
												<value>
													<string>varName</string>
												</value>
											</data>
										</array>
									</value>
									<description>list of variables</description>
								</member>
								<member>
									<name>overwrite</name>
									<value>
										<boolean>true</boolean>
									</value>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>success</name>
									<value>
										<boolean>true</boolean>
									</value>
									<description>if failed then the function will return a fault response</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
	</methods>
	<methodFaultResponses>
		<methodResponse>
			<fault>
				<value>
					<struct>
						<member>
							<name>faultCode</name>
							<value>
								<int>1</int>
							</value>
						</member>
						<member>
							<name>faultString</name>
							<value>
								<string>Load did not succeed.</string>
							</value>
						</member>
					</struct>
				</value>
			</fault>
		</methodResponse>
		<methodResponse>
			<fault>
				<value>
					<struct>
						<member>
							<name>faultCode</name>
							<value>
								<int>2</int>
							</value>
						</member>
						<member>
							<name>faultString</name>
							<value>
								<string>Unload did not succeed</string>
							</value>
						</member>
					</struct>
				</value>
			</fault>
		</methodResponse>
		<methodResponse>
			<fault>
				<value>
					<struct>
						<member>
							<name>faultCode</name>
							<value>
								<int>3</int>
							</value>
						</member>
						<member>
							<name>faultString</name>
							<value>
								<string>SetActive did not succeed.</string>
							</value>
						</member>
					</struct>
				</value>
			</fault>
		</methodResponse>
		<methodResponse>
			<fault>
				<value>
					<struct>
						<member>
							<name>faultCode</name>
							<value>
								<int>4</int>
							</value>
						</member>
						<member>
							<name>faultString</name>
							<value>
								<string>Initialize did not succeed.</string>
							</value>
						</member>
					</struct>
				</value>
			</fault>
		</methodResponse>
		<methodResponse>
			<fault>
				<value>
					<struct>
						<member>
							<name>faultCode</name>
							<value>
								<int>5</int>
							</value>
						</member>
						<member>
							<name>faultString</name>
							<value>
								<string>Terminate did not succeed.</string>
							</value>
						</member>
					</struct>
				</value>
			</fault>
		</methodResponse>
		<methodResponse>
			<fault>
				<value>
					<struct>
						<member>
							<name>faultCode</name>
							<value>
								<int>6</int>
							</value>
						</member>
						<member>
							<name>faultString</name>
							<value>
								<string>SetParameter did not succeed.</string>
							</value>
						</member>
					</struct>
				</value>
			</fault>
		</methodResponse>
		<methodResponse>
			<fault>
				<value>
					<struct>
						<member>
							<name>faultCode</name>
							<value>
								<int>7</int>
							</value>
						</member>
						<member>
							<name>faultString</name>
							<value>
								<string>Break did not succeed.</string>
							</value>
						</member>
					</struct>
				</value>
			</fault>
		</methodResponse>
		<methodResponse>
			<fault>
				<value>
					<struct>
						<member>
							<name>faultCode</name>
							<value>
								<int>8</int>
							</value>
						</member>
						<member>
							<name>faultString</name>
							<value>
								<string>ShowData did not succeed.</string>
							</value>
						</member>
					</struct>
				</value>
			</fault>
		</methodResponse>
	</methodFaultResponses>
</XML-RPC_Library>
