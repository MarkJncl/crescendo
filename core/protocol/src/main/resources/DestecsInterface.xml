<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="protocol.xsl"?>
<XML-RPC_Library xsi:noNamespaceSchemaLocation="xml-rpc_library-with-array.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <schemeVersion>
    <major>1</major>
    <minor>0</minor>
    <revision>0</revision>
    <patch>0</patch>
  </schemeVersion>
  <name>Destecs</name>
  <interfaceVersion>
    <major>1</major>
    <minor>2</minor>
    <revision>2</revision>
  </interfaceVersion>
  <implementationVersion>
    <major>1</major>
    <minor>2</minor>
    <revision>2</revision>
    <patch>22</patch>
  </implementationVersion>
  <methods>
    <!--GetVersion-->
    <method>
      <description>Gets the version of the CoSim implementation in the form: majorVersion.MinorVersion.majorBuild.minorBuild</description>
      <methodCall>
        <methodName>Destecs.GetVersion</methodName>
      </methodCall>
      <methodResponse>
        <params>
          <param>
            <value>
              <struct>
                <member>
                  <name>version</name>
                  <value>
                    <string>4.1.2.3</string>
                  </value>
                  <description>majorVersion.MinorVersion.majorBuild.minorBuild</description>
                </member>
              </struct>
            </value>
          </param>
        </params>
      </methodResponse>
    </method>
    <!--Load-->
    <method>
      <description>Loads a file from its path. The model is activated after load</description>
      <methodCall>
        <methodName>Destecs.Load</methodName>
        <params>
          <param>
            <value>
              <struct>
                <member>
                  <name>name</name>
                  <value>
                    <string>C:\My Models\PID_Controller.emx</string>
                  </value>
                  <description>name of the file or project to load. This loaded model is also made active</description>
                </member>
              </struct>
            </value>
          </param>
        </params>
      </methodCall>
      <methodResponse>
        <params>
          <param>
            <value>
              <struct>
                <member>
                  <name>success</name>
                  <value>
                    <boolean>true</boolean>
                  </value>
                  <description>if failed then the function will return a fault response</description>
                </member>
              </struct>
            </value>
          </param>
        </params>
      </methodResponse>
    </method>
    <!--UnLoad-->
    <method>
      <description>Unloads a file from its path</description>
      <methodCall>
        <methodName>Destecs.UnLoad</methodName>
        <params>
          <param>
            <value>
              <struct>
                <member>
                  <name>name</name>
                  <value>
                    <string>C:\My Models\PID_Controller.emx</string>
                  </value>
                  <description>name of the file or project to unload.</description>
                </member>
              </struct>
            </value>
          </param>
        </params>
      </methodCall>
      <methodResponse>
        <params>
          <param>
            <value>
              <struct>
                <member>
                  <name>success</name>
                  <value>
                    <boolean>true</boolean>
                  </value>
                  <description>if failed then the function will return a fault response</description>
                </member>
              </struct>
            </value>
          </param>
        </params>
      </methodResponse>
    </method>
    <!-- SetActive!-->
    <method>
      <description>Activates a file or project from its path</description>
      <methodCall>
        <methodName>Destecs.SetActive</methodName>
        <params>
          <param>
            <value>
              <struct>
                <member>
                  <name>name</name>
                  <value>
                    <string>C:\My Models\PID_Controller.emx</string>
                  </value>
                  <description>name of the file or project to set active</description>
                </member>
              </struct>
            </value>
          </param>
        </params>
      </methodCall>
      <methodResponse>
        <params>
          <param>
            <value>
              <struct>
                <member>
                  <name>success</name>
                  <value>
                    <boolean>true</boolean>
                  </value>
                  <description>if failed then the function will return a fault response</description>
                </member>
              </struct>
            </value>
          </param>
        </params>
      </methodResponse>
    </method>
    <!--GetStatus-->
    <method>
      <description>Gets the status: 0=Not Initialized, 1=Initialized, 2=Step Taken, not finished, 3=Finished, 4= Loaded</description>
      <methodCall>
        <methodName>Destecs.GetStatus</methodName>
      </methodCall>
      <methodResponse>
        <params>
          <param>
            <value>
              <struct>
                <member>
                  <name>status</name>
                  <value>
                    <int>1</int>
                  </value>
                  <description>0=Not Initialized, 1=Initialized, 2=Step Taken, not finished, 3=Finished</description>
                </member>
              </struct>
            </value>
          </param>
        </params>
      </methodResponse>
    </method>
    <!--QueryInterface-->
    <method>
      <description>
        Queries the interface used in Co-Simulation Grouped in a Map with keys SharedDesignParameters,DesignParameters,Inputs,Outputs.
        The structure of each of them is a Map from name to value
      </description>
      <methodCall>
        <methodName>Destecs.QueryInterface</methodName>
      </methodCall>
      <methodResponse>
        <params>
          <param>
            <value>
              <struct>
                <member>
                  <name>SharedParameter</name>
                  <value>
                    <array>
                      <data>
                        <value>
                          <struct>
                            <member>
                              <name>name</name>
                              <value>
                                <string>parname</string>
                              </value>
                            </member>
                            <member>
                              <name>value</name>
                              <value>
                                <double>3.14159265</double>
                              </value>
                            </member>
                          </struct>
                        </value>
                      </data>
                    </array>
                  </value>
                </member>
                <member>
                  <name>Inputs</name>
                  <value>
                    <array>
                      <data>
                        <value>
                          <struct>
                            <member>
                              <name>name</name>
                              <value>
                                <string>inputname</string>
                              </value>
                            </member>
                            <member>
                              <name>value</name>
                              <value>
                                <double>3.14159265</double>
                              </value>
                            </member>
                          </struct>
                        </value>
                      </data>
                    </array>
                  </value>
                </member>
                <member>
                  <name>Outputs</name>
                  <value>
                    <array>
                      <data>
                        <value>
                          <struct>
                            <member>
                              <name>name</name>
                              <value>
                                <string>outputname</string>
                              </value>
                            </member>
                            <member>
                              <name>value</name>
                              <value>
                                <double>3.14159265</double>
                              </value>
                            </member>
                          </struct>
                        </value>
                      </data>
                    </array>
                  </value>
                </member>
              </struct>
            </value>
          </param>
        </params>
      </methodResponse>
    </method>
    <!--QueryFaults-->
    <method>
      <description>Query faults returns fault options. This means it returns a id : description pair of posible faults modelled in the mldel which can be enabled.</description>
      <methodCall>
        <methodName>Destecs.QueryFaults</methodName>
      </methodCall>
      <methodResponse>
        <params>
          <param>
            <value>
              <struct>
                <member>
                  <name>faults</name>
                  <value>
                    <array>
                      <data>
                        <value>
                          <struct>
                            <member>
                              <name>id</name>
                              <value>
                                <int>1</int>
                              </value>
                            </member>
                            <member>
                              <name>description</name>
                              <value>
                                <string>description of the fault</string>
                              </value>
                            </member>
                          </struct>
                        </value>
                      </data>
                    </array>
                  </value>
                </member>
              </struct>
            </value>
          </param>
        </params>
      </methodResponse>
    </method>
    <!--Initialize-->
    <method>
      <description>Initialize prepares the model for simulation. The apropiate faults will be inserted in the model and the shared design parameters will be set. The simulator / inpterpreter will then enter a state where it waits for steps to be performed.</description>
      <methodCall>
        <methodName>Destecs.Initialize</methodName>
        <params>
          <param>
            <value>
              <struct>
                <member>
                  <name>faults</name>
                  <value>
                    <array>
                      <data>
                        <value>
                          <struct>
                            <member>
                              <name>identifier</name>
                              <value>
                                <int>1</int>
                              </value>
                            </member>
                          </struct>
                        </value>
                      </data>
                    </array>
                  </value>
                </member>
                <member>
                  <name>SharedParameter</name>
                  <value>
                    <array>
                      <data>
                        <value>
                          <struct>
                            <member>
                              <name>name</name>
                              <value>
                                <string>parname</string>
                              </value>
                            </member>
                            <member>
                              <name>value</name>
                              <value>
                                <double>3.14159265</double>
                              </value>
                            </member>
                          </struct>
                        </value>
                      </data>
                    </array>
                  </value>
                </member>
              </struct>
            </value>
          </param>
        </params>
      </methodCall>
      <methodResponse>
        <params>
          <param>
            <value>
              <struct>
                <member>
                  <name>success</name>
                  <value>
                    <boolean>true</boolean>
                  </value>
                  <description>if failed then the function will return a fault response</description>
                </member>
              </struct>
            </value>
          </param>
        </params>
      </methodResponse>
    </method>
    <!--Step-->
    <method>
      <description>Step is used to progress in simulation, it pushes time forward. A step inputs variables and the step time and returns variables changed during the step and the time at which the next change in the server can take place.</description>
      <methodCall>
        <methodName>Destecs.Step</methodName>
        <params>
          <param>
            <value>
              <struct>
                <member>
                  <name>singleStep</name>
                  <value>
                    <boolean>false</boolean>
                  </value>
                  <description>true=take a single step (do not cross the outputTime), false=take steps untill outputTime has been reached</description>
                </member>
                <member>
                  <name>outputTime</name>
                  <value>
                    <double>1.0</double>
                  </value>
                  <description>If zero then just take one step (regardless of the singleStep parameter) else take enough steps to reach outputTime unless singleStep is true</description>
                </member>
                <member>
                  <name>inputs</name>
                  <value>
                    <array>
                      <data>
                        <value>
                          <struct>
                            <member>
                              <name>name</name>
                              <value>
                                <string>inputname</string>
                              </value>
                            </member>
                            <member>
                              <name>value</name>
                              <value>
                                <double>3.14159265</double>
                              </value>
                            </member>
                          </struct>
                        </value>
                      </data>
                    </array>
                  </value>
                </member>
              </struct>
            </value>
          </param>
        </params>
      </methodCall>
      <methodResponse>
        <params>
          <param>
            <value>
              <struct>
                <member>
                  <name>time</name>
                  <value>
                    <double>1.0</double>
                  </value>
                  <description>the time that has been reached</description>
                </member>
                <member>
                  <name>result</name>
                  <value>
                    <int>0</int>
                  </value>
                  <description>0=the step action succeeded, and additional steps can be taken, 1=the step action succeeeded, and the simulation is finished, 2=the step action succeeded, but an event occurred. if failed then the function will return a fault response</description>
                </member>
                <member>
                  <name>outputs</name>
                  <value>
                    <array>
                      <data>
                        <value>
                          <struct>
                            <member>
                              <name>name</name>
                              <value>
                                <string>outputname</string>
                              </value>
                            </member>
                            <member>
                              <name>value</name>
                              <value>
                                <double>3.14159265</double>
                              </value>
                            </member>
                          </struct>
                        </value>
                      </data>
                    </array>
                  </value>
                </member>
              </struct>
            </value>
          </param>
        </params>
      </methodResponse>
    </method>
    <!--Terminate-->
    <method>
      <description>Terminates the server. After a reply no future communication be be posible. The server will release all resources and terminate in the OS.</description>
      <methodCall>
        <methodName>Destecs.Terminate</methodName>
      </methodCall>
      <methodResponse>
        <params>
          <param>
            <value>
              <struct>
                <member>
                  <name>result</name>
                  <value>
                    <boolean>true</boolean>
                  </value>
                  <description>if failed then the function will return a fault response</description>
                </member>
              </struct>
            </value>
          </param>
        </params>
      </methodResponse>
    </method>
    <!--SetParameter-->
    <method>
      <description>Sets any parameter defines as: SharedDesignParameter, Variable IN/OUT or a local design parmeter not used in the co-simulation.</description>
      <methodCall>
        <methodName>Destecs.SetParameter</methodName>
        <params>
          <param>
            <value>
              <struct>
                <member>
                  <name>name</name>
                  <value>
                    <string>parName</string>
                  </value>
                </member>
                <member>
                  <name>value</name>
                  <value>
                    <double>3.14159265</double>
                  </value>
                </member>
              </struct>
            </value>
          </param>
        </params>
      </methodCall>
      <methodResponse>
        <params>
          <param>
            <value>
              <struct>
                <member>
                  <name>result</name>
                  <value>
                    <boolean>true</boolean>
                  </value>
                  <description>if failed then the function will return a fault response</description>
                </member>
              </struct>
            </value>
          </param>
        </params>
      </methodResponse>
    </method>
    <!--Break-->
    <method>
      <description>Suspends the simulation if the server supports this feature. Resume can be done by calling step.</description>
      <methodCall>
        <methodName>Destecs.Break</methodName>
      </methodCall>
      <methodResponse>
        <params>
          <param>
            <value>
              <struct>
                <member>
                  <name>success</name>
                  <value>
                    <boolean>true</boolean>
                  </value>
                  <description>if failed then the function will return a fault response</description>
                </member>
              </struct>
            </value>
          </param>
        </params>
      </methodResponse>
    </method>
    <!--ShowData-->
    <method>
      <description>Asks for data to be shown by the server. If the data is shown without problems true is returned else a fault code</description>
      <methodCall>
        <methodName>Destecs.ShowData</methodName>
      </methodCall>
      <methodResponse>
        <params>
          <param>
            <value>
              <struct>
                <member>
                  <name>success</name>
                  <value>
                    <boolean>true</boolean>
                  </value>
                  <description>if failed then the function will return a fault response</description>
                </member>
              </struct>
            </value>
          </param>
        </params>
      </methodResponse>
    </method>
    <!-- Application GetStatus !-->
  </methods>
  <methodFaultResponses>
    <methodResponse>
      <fault>
        <value>
          <struct>
            <member>
              <name>faultCode</name>
              <value>
                <int>1</int>
              </value>
            </member>
            <member>
              <name>faultString</name>
              <value>
                <string>Load did not succeed.</string>
              </value>
            </member>
          </struct>
        </value>
      </fault>
    </methodResponse>
    <methodResponse>
      <fault>
        <value>
          <struct>
            <member>
              <name>faultCode</name>
              <value>
                <int>2</int>
              </value>
            </member>
            <member>
              <name>faultString</name>
              <value>
                <string>Unload did not succeed</string>
              </value>
            </member>
          </struct>
        </value>
      </fault>
    </methodResponse>
    <methodResponse>
      <fault>
        <value>
          <struct>
            <member>
              <name>faultCode</name>
              <value>
                <int>3</int>
              </value>
            </member>
            <member>
              <name>faultString</name>
              <value>
                <string>SetActive did not succeed.</string>
              </value>
            </member>
          </struct>
        </value>
      </fault>
    </methodResponse>
    <methodResponse>
      <fault>
        <value>
          <struct>
            <member>
              <name>faultCode</name>
              <value>
                <int>4</int>
              </value>
            </member>
            <member>
              <name>faultString</name>
              <value>
                <string>Initialize did not succeed.</string>
              </value>
            </member>
          </struct>
        </value>
      </fault>
    </methodResponse>
    <methodResponse>
      <fault>
        <value>
          <struct>
            <member>
              <name>faultCode</name>
              <value>
                <int>5</int>
              </value>
            </member>
            <member>
              <name>faultString</name>
              <value>
                <string>Terminate did not succeed.</string>
              </value>
            </member>
          </struct>
        </value>
      </fault>
    </methodResponse>
    <methodResponse>
      <fault>
        <value>
          <struct>
            <member>
              <name>faultCode</name>
              <value>
                <int>6</int>
              </value>
            </member>
            <member>
              <name>faultString</name>
              <value>
                <string>SetParameter did not succeed.</string>
              </value>
            </member>
          </struct>
        </value>
      </fault>
    </methodResponse>
    <methodResponse>
      <fault>
        <value>
          <struct>
            <member>
              <name>faultCode</name>
              <value>
                <int>7</int>
              </value>
            </member>
            <member>
              <name>faultString</name>
              <value>
                <string>Break did not succeed.</string>
              </value>
            </member>
          </struct>
        </value>
      </fault>
    </methodResponse>
    <methodResponse>
      <fault>
        <value>
          <struct>
            <member>
              <name>faultCode</name>
              <value>
                <int>8</int>
              </value>
            </member>
            <member>
              <name>faultString</name>
              <value>
                <string>ShowData did not succeed.</string>
              </value>
            </member>
          </struct>
        </value>
      </fault>
    </methodResponse>
  </methodFaultResponses>
</XML-RPC_Library>
