<?xml version="1.0" encoding="UTF-8"?>
<CoSimProtocol xsi:noNamespaceSchemaLocation="xml-rpc_library-with-array.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<schemeVersion>
		<major>1</major>
		<minor>0</minor>
		<revision>0</revision>
		<patch>0</patch>
	</schemeVersion>
	<name>ivcCommand</name>
	<interfaceVersion>
		<major>1</major>
		<minor>2</minor>
		<revision>2</revision>
	</interfaceVersion>
	<implementationVersion>
		<major>1</major>
		<minor>2</minor>
		<revision>2</revision>
		<patch>22</patch>
	</implementationVersion>
	<methods>
		<!--GetVersion-->
		<method>
		<!-- Gets the version of the CoSim implementation in the form: majorVersion.MinorVersion.majorBuild.minorBuild  -->
			<methodCall>
				<methodName>GetVersion</methodName>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<string>4.1.2.3</string>
						</value>
						<description>majorVersion.MinorVersion.majorBuild.minorBuild</description>

					</param>
				</params>
			</methodResponse>
		</method>
		<!--Load-->
		<method>
		<!-- Loads a file from its path. The model is activated after load -->
			<methodCall>
				<methodName>Load</methodName>
				<params>
					<param>
						<value>
							<string>C:\My Models\PID_Controller.emx</string>
						</value>
						<description>name of the file or project to load. This loaded model is also made active</description>
					</param>
				</params>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<boolean>true</boolean>
						</value>
						<description>if failed then the function will return a fault response</description>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--UnLoad-->
		<method>
		<!-- Unloads a file from its path -->
			<methodCall>
				<methodName>UnLoad</methodName>
				<params>
					<param>
						<value>
							<string>C:\My Models\PID_Controller.emx</string>
						</value>
						<description>name of the file or project to unload.</description>
					</param>
				</params>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<boolean>true</boolean>
						</value>
						<description>if failed then the function will return a fault response</description>
					</param>
				</params>
			</methodResponse>
		</method>
		<!-- SetActive!-->
		<method>
		<!-- Activates a file or project from its path -->
			<methodCall>
				<methodName>SetActive</methodName>
				<params>
					<param>
						<value>
							<string>C:\My Models\PID_Controller.emx</string>
						</value>
						<description>name of the file or project to set active</description>
					</param>
				</params>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<boolean>true</boolean>
						</value>
						<description>if failed then the function will return a fault response</description>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--GetStatus-->
		<method>
		<!-- Gets the status: 0=Not Initialized, 1=Initialized, 2=Step Taken, not finished, 3=Finished -->
			<methodCall>
				<methodName>GetStatus</methodName>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<int>1</int>
						</value>
						<description>0=Not Initialized, 1=Initialized, 2=Step Taken, not finished, 3=Finished</description>

					</param>
				</params>
			</methodResponse>
		</method>
		<!--QueryInterface-->
		<method>
		<!-- Queries the interface used in Co-Simulation Grouped in a Map with keys SharedDesignParameters,DesignParameters,Inputs,Outputs.
		The structure of each of them is a Map from name to value -->
			<methodCall>
				<methodName>QueryInterface</methodName>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>SharedDesignParameters</name>
									<value>
										<array>
											<data>
												<value>
													<struct>
														<member>
															<name>name</name>
															<value>
																<string>parname</string>
															</value>
														</member>
														<member>
															<name>value</name>
															<value>
																<double>3.14159265</double>
															</value>
														</member>
													</struct>
												</value>
											</data>
										</array>
									</value>
								</member>
								<member>
									<name>DesignParameters</name>
									<value>
										<array>
											<data>
												<value>
													<struct>
														<member>
															<name>name</name>
															<value>
																<string>parname</string>
															</value>
														</member>
														<member>
															<name>value</name>
															<value>
																<double>3.14159265</double>
															</value>
														</member>
													</struct>
												</value>
											</data>
										</array>
									</value>
								</member>
								<member>
									<name>Inputs</name>
									<value>
										<array>
											<data>
												<value>
													<struct>
														<member>
															<name>name</name>
															<value>
																<string>inputname</string>
															</value>
														</member>
														<member>
															<name>value</name>
															<value>
																<double>3.14159265</double>
															</value>
														</member>
													</struct>
												</value>
											</data>
										</array>
									</value>
								</member>
								<member>
									<name>Outputs</name>
									<value>
										<array>
											<data>
												<value>
													<struct>
														<member>
															<name>name</name>
															<value>
																<string>outputname</string>
															</value>
														</member>
														<member>
															<name>value</name>
															<value>
																<double>3.14159265</double>
															</value>
														</member>
													</struct>
												</value>
											</data>
										</array>
									</value>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--QueryFaults-->
		<method>
			<methodCall>
				<methodName>QueryFaults</methodName>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<array>
								<data>
									<value>
										<struct>
											<member>
												<name>Source</name>
												<value>
													<string>Source name</string>
												</value>
											</member>
											<member>
												<name>Faults</name>
												<value>
													<array>
														<data>
															<value>
																<struct>
																	<member>
																		<name>id</name>
																		<value>
																			<int>1</int>
																		</value>
																	</member>
																	<member>
																		<name>description</name>
																		<value>
																			<string>description of the fault</string>
																		</value>
																	</member>
																	<member>
																		<name>name</name>
																		<value>
																			<string>name of the fault</string>
																		</value>
																	</member>
																</struct>
															</value>
														</data>
													</array>
												</value>
											</member>
										</struct>
									</value>
								</data>
							</array>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--Initialize-->
		<method>
			<methodCall>
				<methodName>Initialize</methodName>
				<params>
					<param>
						<name>faults</name>
						<value>
							<array>
								<data>
									<value>
										<struct>
											<member>
												<name>identifier</name>
												<value>
													<int>1</int>
												</value>
											</member>
										</struct>
									</value>
								</data>
							</array>
						</value>
					</param>
				</params>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name></name>
									<value>
										<boolean>true</boolean>
									</value>
									<description>if failed then the function will return a fault response</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--Step-->
		<method>
			<methodCall>
				<methodName>Step</methodName>
				<params>
					<param>
						<name>outputTime</name>
						<value>
							<double>1.0</double>
						</value>
						<description>time at which output is desired, simulation will not go beyond this point. If zero then just take one step</description>
					</param>
					<param>
						<name>goToOutputTime</name>
						<value>
							<boolean>false</boolean>
						</value>
						<description>true=go on until output time is reached, false=return after one step</description>
					</param>
					<param>
						<name>inputs</name>
						<value>
							<array>
								<data>
									<value>
										<struct>
											<member>
												<name>name</name>
												<value>
													<string>inputname</string>
												</value>
											</member>
											<member>
												<name>value</name>
												<value>
													<double>3.14159265</double>
												</value>
											</member>
										</struct>
									</value>
								</data>
							</array>
						</value>
					</param>
				</params>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>time</name>
									<value>
										<double>1.0</double>
									</value>
									<description>the time that has been reached</description>
								</member>
								<member>
									<name>result</name>
									<value>
										<int>0</int>
									</value>
									<description>0=the step action succeeded, and additional steps can be taken, 1=the step action succeeeded, and the simulation is finished, 2=the step action succeeded, but an event occurred. if failed then the function will return a fault response</description>
								</member>
								<member>
									<name>outputs</name>
									<value>
										<array>
											<data>
												<value>
													<struct>
														<member>
															<name>name</name>
															<value>
																<string>outputname</string>
															</value>
														</member>
														<member>
															<name>value</name>
															<value>
																<double>3.14159265</double>
															</value>
														</member>
													</struct>
												</value>
											</data>
										</array>
									</value>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--Terminate-->
		<method>
			<methodCall>
				<methodName>Terminate</methodName>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>result</name>
									<value>
										<boolean>true</boolean>
									</value>
									<description>if failed then the function will return a fault response</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--SetParameter-->
		<method>
			<methodCall>
				<methodName>SetParameter</methodName>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>name</name>
									<value>
										<string>parName</string>
									</value>
								</member>
								<member>
									<name>value</name>
									<value>
										<double>3.14159265</double>
									</value>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>result</name>
									<value>
										<boolean>true</boolean>
									</value>
									<description>if failed then the function will return a fault response</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--Break-->
		<method>
			<methodCall>
				<methodName>Break</methodName>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name></name>
									<value>
										<boolean>true</boolean>
									</value>
									<description>if failed then the function will return a fault response</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!--ShowData-->
		<method>
			<methodCall>
				<methodName>ShowData</methodName>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name></name>
									<value>
										<boolean>true</boolean>
									</value>
									<description>if failed then the function will return a fault response</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
		<!-- Application GetStatus !-->
		<method>
			<methodCall>
				<methodName>ivcCommandGetStatus</methodName>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>name</name>
									<value>
										<string>PID_Controller</string>
									</value>
									<description>name of the application</description>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodCall>
			<methodResponse>
				<params>
					<param>
						<value>
							<struct>
								<member>
									<name>isRunning</name>
									<value>
										<boolean>true</boolean>
									</value>
								</member>
								<member>
									<name>isLogging</name>
									<value>
										<boolean>true</boolean>
									</value>
								</member>
								<member>
									<name>isMonitoring</name>
									<value>
										<boolean>true</boolean>
									</value>
								</member>
								<member>
									<name>time</name>
									<value>
										<double>3.21</double>
									</value>
								</member>
								<member>
									<name>executionTime</name>
									<value>
										<double>0.0067</double>
									</value>
								</member>
							</struct>
						</value>
					</param>
				</params>
			</methodResponse>
		</method>
	</methods>
	<methodFaultResponses>
		<methodResponse>
			<fault>
				<value>
					<struct>
						<member>
							<name>faultCode</name>
							<value>
								<int>1</int>
							</value>
						</member>
						<member>
							<name>faultString</name>
							<value>
								<string>Load did not succeed.</string>
							</value>
						</member>
					</struct>
				</value>
			</fault>
		</methodResponse>
		<methodResponse>
			<fault>
				<value>
					<struct>
						<member>
							<name>faultCode</name>
							<value>
								<int>2</int>
							</value>
						</member>
						<member>
							<name>faultString</name>
							<value>
								<string>Unload did not succeed</string>
							</value>
						</member>
					</struct>
				</value>
			</fault>
		</methodResponse>
		<methodResponse>
			<fault>
				<value>
					<struct>
						<member>
							<name>faultCode</name>
							<value>
								<int>3</int>
							</value>
						</member>
						<member>
							<name>faultString</name>
							<value>
								<string>SetActive did not succeed.</string>
							</value>
						</member>
					</struct>
				</value>
			</fault>
		</methodResponse>
		<methodResponse>
			<fault>
				<value>
					<struct>
						<member>
							<name>faultCode</name>
							<value>
								<int>4</int>
							</value>
						</member>
						<member>
							<name>faultString</name>
							<value>
								<string>Initialize did not succeed.</string>
							</value>
						</member>
					</struct>
				</value>
			</fault>
		</methodResponse>
		<methodResponse>
			<fault>
				<value>
					<struct>
						<member>
							<name>faultCode</name>
							<value>
								<int>5</int>
							</value>
						</member>
						<member>
							<name>faultString</name>
							<value>
								<string>Terminate did not succeed.</string>
							</value>
						</member>
					</struct>
				</value>
			</fault>
		</methodResponse>
		<methodResponse>
			<fault>
				<value>
					<struct>
						<member>
							<name>faultCode</name>
							<value>
								<int>6</int>
							</value>
						</member>
						<member>
							<name>faultString</name>
							<value>
								<string>SetParameter did not succeed.</string>
							</value>
						</member>
					</struct>
				</value>
			</fault>
		</methodResponse>
		<methodResponse>
			<fault>
				<value>
					<struct>
						<member>
							<name>faultCode</name>
							<value>
								<int>7</int>
							</value>
						</member>
						<member>
							<name>faultString</name>
							<value>
								<string>Break did not succeed.</string>
							</value>
						</member>
					</struct>
				</value>
			</fault>
		</methodResponse>
		<methodResponse>
			<fault>
				<value>
					<struct>
						<member>
							<name>faultCode</name>
							<value>
								<int>8</int>
							</value>
						</member>
						<member>
							<name>faultString</name>
							<value>
								<string>ShowData did not succeed.</string>
							</value>
						</member>
					</struct>
				</value>
			</fault>
		</methodResponse>
	</methodFaultResponses>
</CoSimProtocol>
